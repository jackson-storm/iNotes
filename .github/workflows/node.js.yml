name: Node.js CI

on:
  push:
    branches: ["main", "develop", "feature/*" ]
  pull_request:
    branches: ["main", "develop", "feature/*" ]

jobs:
  build:
    name: Build (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: iNotesBack

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: iNotesBack/yarn.lock

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Build Project
        run: yarn build

  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: iNotesBack

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: iNotesBack/yarn.lock

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Run Tests
        run: yarn test --coverage

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: iNotesBack/coverage
